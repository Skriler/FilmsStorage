@model FilmsStorage.Models.FilmAddModel

@{
    ViewBag.Title = "Upload Film";

    var genresSelectedListItems = new List<SelectListItem>();

    foreach (var genre in Model.Genres)
    {
        genresSelectedListItems.Add(new SelectListItem { Value = genre.GenreID.ToString(), Text = genre.GenreName });
    }
}

<h2>Upload Film</h2>

@using (Html.BeginForm(
    actionName: "Add",
    controllerName: "Files",
    method: FormMethod.Post,
    htmlAttributes: new { enctype = "multipart/form-data" }
    ))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FilmAddModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FilmName, labelText: "Film Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FilmName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FilmName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseYear, labelText: "Release Year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseYear, new { htmlAttributes = new { @class = "form-control", min = "1960", max = DateTime.Now.Year.ToString() } })
                @Html.ValidationMessageFor(model => model.ReleaseYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreID, labelText: "Genre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.GenreID, genresSelectedListItems)
                @Html.ValidationMessageFor(model => model.GenreID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileName, labelText: "Choose file", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="film" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FilmDescription, labelText: "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.FilmDescription, htmlAttributes: new { @class = "form-control", cols = "50", rows = "4" })
                @Html.ValidationMessageFor(model => model.FilmDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload Film" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("ShowError");
}